* Currently missing: `type_erased`
  See http://thbecker.net/free_software_utilities/type_erasure_for_cpp_iterators/any_iterator.html
* Single-pass ranges not supported by `adjacent_filtered` and `uniqued`.
  See `src/adjacent_filtered_bug.cpp`.

########
ADAPTORS
########

tokenized
reversed
indirected
indexed
transformed
adjacent_filtered    // Bug with single-pass-ranges
filtered
uniqued              // Bug with single-pass-ranges
copied
replaced
replaced_if

map_keys
map_values
sliced
strided



##########
ALGORITHMS
##########

MUTATING
--------

copy
copy_backward
fill
fill_n
generate
inplace_merge    // https://stackoverflow.com/questions/21624268
merge
nth_element
partial_sort
partition
random_shuffle
remove
remove_if
remove_copy_if    // In boost::, not in boost::range:: !
remove_copy       // In boost::, not in boost::range:: !
replace
replace_copy
replace_copy_if
replace_if
reverse
reverse_copy
rotate
rotate_copy
sort
stable_partition
stable_sort
swap_ranges    // requires include <boost/range/algorithm/swap_ranges.hpp>
transform
unique
unique_copy



NON-MUTATING
------------

adjacent_find
binary_search
count
count_if
equal
equal_range
for_each
find
find_end
find_first_of
find_if
lexicographical_compare
lower_bound
max_element
min_element
mismatch
search
search_n
upper_bound


SET
---

includes
set_union
set_intersection
set_difference
set_symmetric_difference


HEAP
----

push_heap
pop_heap
make_heap
sort_heap


PERMUTATIONS
------------

next_permutation
prev_permutation


NEW
---

copy_n
erase
for_each
insert
iota
is_sorted
overwrite
push_back
push_front
remove_erase
remove_erase_if


NUMERIC
-------

accumulate
adjacent_difference
inner_product
partial_sum
